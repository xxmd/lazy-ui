<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Basics on LazyUI</title>
    <link>https://xxmd.github.io/prefix/basic/</link>
    <description>Recent content in Basics on LazyUI</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="https://xxmd.github.io/prefix/basic/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Layout 布局</title>
      <link>https://xxmd.github.io/prefix/basic/layout/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://xxmd.github.io/prefix/basic/layout/</guid>
      <description>栅格布局原理 定义容器大小，平分 12 份。再调整内外边距，最后结合媒体查询，就制作出了强大的响应式网格系统。Bootstrap框架中的网格系统就是这样实现的。
SCSS 实现 // 混入 @import &amp;#34;../../../scss/mixins&amp;#34;; .lazy-row { // 清除浮动 @include clearfix(); display: block; } // 栅格总列数，即将容器宽度平分为12份 $grid-cols: 12; // 百分比计算函数 @function compute-percent($n) { @return $n / $grid-cols * 100%; } // 对应列数占据的宽度 @for $i from 1 through $grid-cols { .lazy-col-#{$i} { float: left; width: compute-percent($i); } } // 列偏移 @for $i from 1 through $grid-cols { .lazy-col-offset-#{$i} { margin-left: compute-percent($i); } } // 最大列间距20px $max-col-space: 20; // 列间距 @for $i from 1 through $max-col-space { .</description>
    </item>
    
  </channel>
</rss>
